swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/{userId}/transactions:
    parameters:
      - name: userId
        in: path
        description: The ID of the user
        required: true
        type: string
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction
      description: API to retrieve information from all transactions
      responses:
        "200":
          description: transactions recovered successfully
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized user
        "404":
          description: Invalid UserId
        "500":
          description: Internal Server Error

  /user/transaction/{transactionId}:
    parameters:
      - name: transactionId
        in: path
        description: The ID of the transaction
        required: true
        type: string
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction
      description: API for retrieving transaction details
      produces:
        - application/json
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized User
        "404":
          description: Invalid transactionId
        "500":
          description: Internal Server Error
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: API Transaction Modification
      description: API for updating a transaction only on category and note
      parameters:
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            $ref: "#/definitions/EditTransaction"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized User
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name

  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Account:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
            type: array
            description: Array Of transactions
            items:
              $ref: "#/definitions/Transaction"
  Transaction:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
      date:
        type: string
        format: date-time
      amount:
        type: number
      balance:
        type: number
      description:
        type: string
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string

  EditTransaction:
    properties:
      category:
        type: string
        description: Transaction Category
      notes:
        type: string
        description: Additional Note
